/* チェック状態の配色 */
.cell-checked {
  background: #e7f1ff !important; /* 青系（Bootstrapに寄せる） */
}
.cell-disabled {
  color: #6c757d;
  background: #f1f3f5;
}

/* 小さめ端末の余白 */
@media (max-width: 576px) {
  #summary .card-body { padding: 0.75rem; }
  .form-label { margin-bottom: 0.25rem; }
}

/* アイコンの設定 */
.summary-icon {
  width: 84px;            /* 表の高さに合わせて微調整 */
  height: 40px;
  object-fit: contain;    /* 縦横比を維持 */
  display: inline-block;
}

/* アイコンセル */
#allFacesTable .name-cell {
  min-width: 72px;
  width: 72px;
  max-width: 72px;
  padding: 4px 0;
}

#allFacesTable .poke-icon {
  display: flex;
  align-items: center;
  justify-content: center;
}

#allFacesTable .poke-icon svg {
  display: block;
  border: 1px solid #bbb;
  border-radius: 10px;
  overflow: hidden;
}

/* 薄型タブ（スマホ） */
@media (max-width: 768px){
  #mainTabs.nav-tabs { gap: 4px; }
  #mainTabs .nav-link {
    display: inline-flex; align-items: center; gap: 6px;
    padding: 6px 8px;      /* ← 上下・左右の縮小ポイント */
    font-size: .82rem;     /* 9.5～11px相当 */
    line-height: 1; white-space: nowrap;
  }
  #mainTabs .nav-link .tab-ic {
    width: 24px; height: 24px; flex: 0 0 auto;
  }
}
/* もっと狭い端末は横スクロール */
#mainTabsWrap { overflow-x: auto; -webkit-overflow-scrolling: touch; }
#mainTabsWrap::-webkit-scrollbar { display: none; }

/* ==================== Summary Table Design ==================== */
/* うとうと（1行目） */
.summary-table tbody tr:nth-child(1) > th,
.summary-table tbody tr:nth-child(1) > td {
  background-color: #FFF2CC;
}

/* すやすや（2行目） */
.summary-table tbody tr:nth-child(2) > th,
.summary-table tbody tr:nth-child(2) > td {
  background-color: #DEF4F8;
}

/* ぐっすり（3行目） */
.summary-table tbody tr:nth-child(3) > th,
.summary-table tbody tr:nth-child(3) > td {
  background-color: #DAE3F3;
}

.field-icon {
  height: 24px;   /* アイコンの高さを統一 */
  vertical-align: middle;
}

/* 1) フォントを一律で 2pt 小さく */
.summary-table {
  font-size: calc(1rem - 2pt);
}

/* 2) セル内レイアウト統一（分子／区切り／分母／(％)） */
.summary-table .summary-cell {
  text-align: center;
  line-height: 1.15;
}
.summary-table .summary-cell .sum-top { font-weight: 600; }
.summary-table .summary-cell .sum-mid { /* 必要なら調整 */ }
.summary-table .summary-cell .sum-per { opacity: 0.75; }

/* 2-β) 区切り線：中央寄せ＋長さを「5桁分」目安に短縮 */
.summary-table .summary-cell .sum-hr {
  height: 1px;
  background: currentColor;
  opacity: 0.3;
  margin: 2px auto;   /* 中央寄せ */
  width: 3.5em;       /* ← フォント依存。3.5em ≒ 5桁分の長さ。調整はここ */
}

/* ① 左端（ヘッダー列）の幅を“だけ”狭める */
.summary-table .summary-lefthead-col,            /* thead 1列目(空セル) */
.summary-table tbody th.summary-lefthead {       /* tbody 1列目(アイコン/合計) */
  width: 56px;
  min-width: 56px;
  padding-left: 6px;
  padding-right: 6px;
}

/* ② 左端セル内のアイコンを中央揃え＆サイズ調整 */
.summary-table tbody th.summary-lefthead .summary-icon {
  display: block;    /* ブロック化して */
  margin: 0 auto;    /* 左右中央へ */
  height: 32px;      /* お好みで 20〜28px */
  width: auto;
}

/* ③ “合計”テキストの見栄え（お好み） */
.summary-table tbody th.summary-lefthead.fw-semibold {
  line-height: 1.1;
}

/* （任意）数字が詰まりすぎる場合の縦余白微調整 */
.summary-table td,
.summary-table th {
  vertical-align: middle;
  /* padding: 0.25rem 0.5rem;  ← 必要なら解放して調整 */
}

/* 分子の右にアイコンを置くための行レイアウト */
.summary-table .summary-cell .sum-top-row{
  display:inline-flex;
  align-items:baseline;   /* 数字のベースラインに揃える */
  gap:4px;
}

/* アイコンは数字サイズに合わせる：1em四方。非表示でも幅は確保 */
.summary-table .summary-cell .sum-badge{
  width:1em;
  height:1em;
  object-fit:contain;
  flex:0 0 auto;
  vertical-align:middle;
}

/* 分子＋バッジを横並び（バッジがある時だけ使われる） */
.summary-table .summary-cell .sum-top-row{
  display:inline-flex;
  align-items:baseline;   /* 数字のベースラインに揃える */
  gap:4px;
}

/* バッジは数字のサイズ＝1em に合わせる */
.summary-table .summary-cell .sum-badge{
  width:1em;
  height:1em;
  object-fit:contain;
  flex:0 0 auto;
  vertical-align:middle;
}

/* ===== フィールド別寝顔一覧（ポケモン列の体裁） ===== */
#pane-byfield .byfield-name-cell { text-align: center; vertical-align: middle; }
#pane-byfield .byfield-name-cell .pf-wrap { 
  width: calc(36px + 14px);   /* アイコン＋余白分。ICON_SIZE_FIELD=36pxを想定 */
  margin: 0 auto;
}
#pane-byfield .byfield-icon {
  width: 36px; height: 36px; line-height: 0; margin: 0 auto;
}
#pane-byfield .byfield-icon svg {
  display: block;
  border: 1px solid #bbb;
  border-radius: 10px;
  overflow: hidden;
}
#pane-byfield .byfield-name-cell .pf-text {
  margin-top: 4px; line-height: 1.2;
  word-break: break-word; white-space: normal;
}
#pane-byfield .byfield-name-cell .pf-no {
  font-size: 9px; color: #6c757d;
}
#pane-byfield .byfield-name-cell .pf-name {
  font-weight: 600; font-size: 6px;
  max-width: calc(36px + 10px); /* はみ出し防止（必要に応じて微調整） */
  margin: 0 auto;
}

/* ===== フィールド別寝顔一覧（睡眠タイプ列） ===== */
#pane-byfield .type-cell { 
  text-align: center; 
  font-size: 9pt; 
}

/* ◓ + 数字 の小型バッジ */
.rank-chip {
  display: inline-flex;
  align-items: baseline;
  gap: 4px;
  font-size: 0.9rem; /* 必要なら調整 */
  line-height: 1;
}
.rank-chip .rank-ball { font-weight: 700; }
.rank-chip .rank-num  { font-weight: 600; }

/* クリックできるセルの見た目 */
td.toggle-cell {
  cursor: pointer;
  user-select: none;
}
td.toggle-cell:hover {
  filter: brightness(0.98);
}

/* 検索結果が空のときの「COMPLETED」表示（かわいいバッジ風） */
.completed-msg {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  padding: 8px 14px;
  border-radius: 9999px;
  background: #fff7d6;
  border: 1px solid #f4e2a1;
  font-weight: 800;
  letter-spacing: .5px;
}
.completed-msg::before { content: "✨"; }

/* ◓ + 数字（rank-chip）。未定義なら有効化（既にあれば重複不要） */
.rank-chip {
  display: inline-flex;
  align-items: baseline;
  gap: 4px;
  font-size: 0.95rem;
  line-height: 1;
}
.rank-chip .rank-ball { font-weight: 700; }
.rank-chip .rank-num  { font-weight: 600; }

/* ポケモンセル共通（既存 byfield と共有） */
.byfield-name-cell .pf-wrap { display:flex; flex-direction:column; align-items:center; }
.byfield-name-cell .byfield-icon svg { display:block; border:1px solid #bbb; border-radius:10px; overflow:hidden; }
.byfield-name-cell .pf-no { font-size:9pt; line-height:1.1; }
.byfield-name-cell .pf-name { font-size:9pt; line-height:1.2; word-break:break-word; white-space:normal; max-width:calc(36px + 8px); }

/* ミニ表（未入手カウント） */
.rank-mini-summary:empty { display: none; }
.rank-mini-summary tr.row-uto  > th, .rank-mini-summary tr.row-uto  > td  { background-color: #fff5db !important; }
.rank-mini-summary tr.row-suya > th, .rank-mini-summary tr.row-suya > td { background-color: #e9f4ff !important; }
.rank-mini-summary tr.row-gu   > th, .rank-mini-summary tr.row-gu   > td { background-color: #ecebff !important; }
.rank-mini-summary table thead th { vertical-align: middle; }

/* 逆引きフィルター（横並び） */
.filter-bar { display:flex; flex-direction:column; align-items:flex-start; gap:10px; }
.filter-item { display:flex; flex-direction:row; align-items:center; gap:8px; white-space:nowrap; }
.filter-item label { margin:0 !important; font-weight:500; }
.filter-item .form-select { width:auto; display:inline-block; }
@media (min-width: 768px) {
  .filter-bar { flex-direction:row; flex-wrap:nowrap; align-items:center; gap:12px 16px; }
}

/* ==== 汎用：タブ下に重ねる固定バー＆表ヘッダー ==== */
:root { --sticky-top: 48px; } /* タブの高さ（JSで上書き） */

/* 各タブ内の「固定ブロック」をまとめるラッパ */
.pane-sticky-wrap{
  position: sticky;
  top: var(--sticky-top);
  z-index: 1020;
  background:#fff;
  padding:.5rem 0;
  border-bottom:1px solid rgba(0,0,0,.075);
}

/* 逆引きのミニ表（固定しても邪魔にならないよう軽量） */
.rank-mini-summary:empty { display:none; }

/* ==== 既存の thead sticky を無効化（クローン方式に切替） ==== */
thead.is-sticky { position: static !important; top: auto !important; }

/* ==== stickyの大前提：縦overflowを可視化（祖先に overflow-y があると sticky は死ぬ） ==== */
.tab-content,
.tab-pane,
#pane-allfaces, #pane-byfield, #pane-search,
#pane-allfaces .card, #pane-byfield .card, #pane-search .card,
#pane-allfaces .card-body, #pane-byfield .card-body, #pane-search .card-body {
  overflow-y: visible !important;
}
/* 横スクロールだけ許可（縦はvisible） */
#pane-allfaces .table-responsive,
#pane-byfield  .table-responsive,
#pane-search   .table-responsive {
  overflow-x: auto;
  overflow-y: visible !important;
}

/* ==== フィルター群（pane-sticky-wrap）は従来通り sticky ==== */
:root { --sticky-top: 48px; } /* JSで更新 */
.pane-sticky-wrap{
  position: sticky;
  top: var(--sticky-top);
  z-index: 1020;         /* ヘッダーより前面 */
  background:#fff;
  padding:.5rem 0;
  border-bottom:1px solid rgba(0,0,0,.075);
}

/* 既存の sticky 指定を完全無効化 */
thead.is-sticky { position: static !important; top:auto !important; }

/* フローティングヘッダーの土台（未定義なら追加、定義済みなら上書き） */
.floating-head{
  position: fixed;
  left: 0; top: 0;
  z-index: 1015;           /* フィルター(1020)より一段下 */
  display: none;
  background:#fff;
  border-bottom: 1px solid rgba(0,0,0,.12);
  pointer-events: none;     /* iOSでのスワイプ阻害を回避 */
  will-change: transform;
  transform: translate3d(0,0,0);
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  contain: layout paint style;
}
.floating-head table{ margin:0 !important; border-collapse:separate; border-spacing:0; background:#fff; }
.floating-head thead th, .floating-head thead td{ background:#fff; background-clip:padding-box; white-space:nowrap; }

/* ==== メインタブをアイコン化＋1行固定（必要なら横スクロール） ==== */

/* ラッパは横スクロール許可（スクロールバーは非表示） */
#mainTabsWrap { overflow-x: auto; -webkit-overflow-scrolling: touch; }
#mainTabsWrap::-webkit-scrollbar { display: none; }

/* アイコン画像そのものを 38px 四方に */
#mainTabs .tab-img {
  width: 38px;
  height: 38px;
  display: block;
}

/* アイコンタブのボタン：指で押しやすいヒットエリアに（常時） */
#mainTabs .nav-link.tab-icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 6px 12px;   /* 38px + 6px*2 = 50px の縦ヒットエリア */
  min-height: 65px;    /* 指標: 44px以上を確保 */
  min-width: 50px;     /* 横も最低50px確保して押しやすく */
  line-height: 1;
}

/* バックアップ（文字タブ）も高さを揃えて押しやすく */
#mainTabs .nav-link:not(.tab-icon) {
  padding: 6px 12px;
  min-height: 50px;
  white-space: nowrap;
}

/* 1行固定＆横スクロール（既存と同じ。未設定なら有効化） */
#mainTabs { flex-wrap: nowrap !important; gap: 8px; }
#mainTabsWrap { overflow-x: auto; -webkit-overflow-scrolling: touch; }
#mainTabsWrap::-webkit-scrollbar { display: none; }

/* ハンバーガーメニュー（常に最前面に重ねる） */
#hamburgerMenu {
  display:none;
  position:fixed !important;   /* viewport基準で固定 */
  top:0; left:0;               /* JSで座標を上書き */
  z-index: 2147483647 !important; /* ほぼ絶対に負けない最大値 */
  background:#fff;
  color:#333;
  border:1px solid rgba(0,0,0,.15);
  border-radius:.5rem;
  box-shadow:0 6px 20px rgba(0,0,0,.15);
  width:max-content;
  max-width:calc(100vw - 24px);
  white-space:nowrap;
  overflow:auto;
  -webkit-overflow-scrolling:touch;
}

#hamburgerMenu ul{ list-style:none; margin:0; padding:.25rem 0; }
#hamburgerMenu li{ margin:0; }
#hamburgerMenu a{
  display:block;
  padding:.5rem .875rem;
  text-decoration:none;
  color:inherit;
}
#hamburgerMenu a:hover{ background:#f6f6f6; color:inherit; }

/* ハンバーガーボタンの押しやすさ（dropdown不使用のため個別指定） */
#tab-menu{
  display:inline-flex;
  align-items:center;
  justify-content:center;
  padding:6px 12px;
  min-height:50px;
  min-width:50px;
}
